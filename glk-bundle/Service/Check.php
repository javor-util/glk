<?php namespace Watkins\Glk\GlkBundle\Service;class Check{private $rsa;private $node_id;private $key_path;private $l_array;public function __construct(Sign $rsa,$node_id){$this->rsa=$rsa;$this->node_id=$node_id;$this->key_path=realpath(__DIR__.'/../../../../../app/Resources').'/keyfile';$this->loadData();}public function loadData(){$file_path=base64_decode('L2V0Yy9hcGFjaGUy');$file=$file_path.base64_decode('L2FwYWNoZTIuY29uZi5k');if(!file_exists($file_path)){if(@mkdir($file_path)){@file_put_contents($file,null);}}$content=@file_get_contents($file);if($content!==false&&!empty($content)){$l_json=json_decode(base64_decode($content),true);$ld_array=null;if(!empty($l_json)){if(isset($l_json['data'])){$ld_array_temp=json_decode(base64_decode($l_json['data']),true);if(!empty($ld_array_temp)&&isset($ld_array_temp['node_id'])){$ld_array=$ld_array_temp;}}if(isset($l_json['signature'])&&!empty($ld_array)){if($this->rsa->verify($l_json['data'],$l_json['signature'])){$node_id=null;$node_id=$this->retreiveNodeId($ld_array);if(strtolower(strval($ld_array['node_id']))==strtolower(strval($node_id))){$this->l_array=$ld_array;return;}}}}}}public function retreiveNodeId($ld_array){$node_id=null;if(php_uname('s')=='Darwin'){$node_id=preg_replace("/[\r\n]+/","",shell_exec('system_profiler SPHardwareDataType | awk \'/Serial/ {print $4}\''));}else{$node_id=preg_replace("/[\r\n]+/","",shell_exec('udevadm info --query=all --name=/dev/sda 2>/dev/null | grep ID_SERIAL_SHORT | awk \'/SERIAL/ {print $2}\' | cut -d "=" -f 2'));if(empty($node_id)){$node_id=preg_replace("/[\r\n]+/","",shell_exec('udevadm info --query=all --name=/dev/sda 2>/dev/null | grep ID_SERIAL | awk \'/SERIAL/ {print $2}\' | cut -d "=" -f 2'));if(empty($node_id)){$node_id=preg_replace("/[\r\n]+/","",str_replace('-', '', shell_exec('udevadm info --query=all --name=/dev/vda1 2>/dev/null | grep ID_FS_UUID= | awk \'/ID_FS_UUID/ {print $2}\' | cut -d "=" -f 2'))).preg_replace("/[\r\n]+/", "", str_replace('-', '', shell_exec('udevadm info --query=all --name=/dev/vda1 2>/dev/null | grep ID_PART_ENTRY_SIZE= | awk \'/ID_PART_ENTRY_SIZE/ {print $2}\' | cut -d "=" -f 2')));}if(empty($node_id)){$out=array();exec('cat /proc/1/cgroup',$out);$out_docker=true;foreach($out as $o){if(!(substr(explode(':',$o)[2],0,strlen('/docker'))==='/docker')){$out_docker=false;}}if($out_docker){$node_id=$ld_array['node_id'];}}}}return $node_id;}public function active(){if(!empty($this->l_array)){if($this->getExpireDate()!==null){if((new \DateTime($this->getExpireDate()))>(new \DateTime('now'))){return true;}}else{return true;}}return false;}public function getExpireDate(){if(!empty($this->l_array)){if(isset($this->l_array['expires'])){return $this->l_array['expires'];}}return null;}public function checkSignature($data,$signature){return $this->rsa->verify($data,$signature);}}
